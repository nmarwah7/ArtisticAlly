{"ast":null,"code":"var _jsxFileName = \"/Users/nikitamarwah/Orbital24/artistically/client/src/components/Messages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Messages.css'; // Import CSS file for styling\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Messages = ({\n  userId,\n  contacts,\n  selectedContact,\n  setSelectedContact\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [existingChats, setExistingChats] = useState(new Set());\n  useEffect(() => {\n    if (selectedContact) {\n      fetchMessages(selectedContact.id);\n    }\n  }, [selectedContact]);\n  const fetchMessages = async contactId => {\n    try {\n      const response = await axios.get(`http://localhost:3001/messages/${userId}/${contactId}`);\n      setMessages(response.data);\n      // Add the contact ID to existing chats if there are messages\n      if (response.data.length > 0) {\n        setExistingChats(prev => new Set(prev).add(contactId));\n      }\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  const handleSendMessage = async () => {\n    if (!selectedContact || newMessage.trim() === '') return;\n    try {\n      await axios.post('http://localhost:3001/messages/send', {\n        senderId: userId,\n        receiverId: selectedContact.id,\n        message: newMessage\n      });\n      const newMessageObj = {\n        id: Date.now(),\n        // Generate a unique temporary ID (replace with actual ID from server if available)\n        senderId: userId,\n        receiverId: selectedContact.id,\n        message: newMessage\n      };\n      setMessages([...messages, newMessageObj]);\n      setNewMessage('');\n      // Ensure the contact is added to existing chats when a message is sent\n      setExistingChats(prev => new Set(prev).add(selectedContact.id));\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  const filteredContacts = contacts.filter(contact => existingChats.has(contact.id) && (contact.firstName.toLowerCase().includes(searchTerm.toLowerCase()) || contact.lastName.toLowerCase().includes(searchTerm.toLowerCase()) || contact.email.toLowerCase().includes(searchTerm.toLowerCase())));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search contacts...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), filteredContacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-item ${selectedContact && selectedContact.id === contact.id ? 'selected' : ''}`,\n        onClick: () => setSelectedContact(contact),\n        children: [contact.firstName, \" \", contact.lastName]\n      }, contact.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: selectedContact ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.senderId === userId ? 'sent' : 'received'}`,\n            children: msg.message\n          }, msg.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: \"Type your message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-chat-selected\",\n        children: \"Select a contact to start messaging\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(Messages, \"SiG9bYQaQPJx0utDuf3SquIroeQ=\");\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Messages","userId","contacts","selectedContact","setSelectedContact","_s","messages","setMessages","newMessage","setNewMessage","searchTerm","setSearchTerm","existingChats","setExistingChats","Set","fetchMessages","id","contactId","response","get","data","length","prev","add","error","console","handleSendMessage","trim","post","senderId","receiverId","message","newMessageObj","Date","now","filteredContacts","filter","contact","has","firstName","toLowerCase","includes","lastName","email","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","msg","_c","$RefreshReg$"],"sources":["/Users/nikitamarwah/Orbital24/artistically/client/src/components/Messages.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Messages.css'; // Import CSS file for styling\n\nconst Messages = ({ userId, contacts, selectedContact, setSelectedContact }) => {\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState('');\n    const [searchTerm, setSearchTerm] = useState('');\n    const [existingChats, setExistingChats] = useState(new Set());\n\n    useEffect(() => {\n        if (selectedContact) {\n            fetchMessages(selectedContact.id);\n        }\n    }, [selectedContact]);\n\n    const fetchMessages = async (contactId) => {\n        try {\n            const response = await axios.get(`http://localhost:3001/messages/${userId}/${contactId}`);\n            setMessages(response.data);\n            // Add the contact ID to existing chats if there are messages\n            if (response.data.length > 0) {\n                setExistingChats(prev => new Set(prev).add(contactId));\n            }\n        } catch (error) {\n            console.error('Error fetching messages:', error);\n        }\n    };\n\n    const handleSendMessage = async () => {\n        if (!selectedContact || newMessage.trim() === '') return;\n\n        try {\n            await axios.post('http://localhost:3001/messages/send', {\n                senderId: userId,\n                receiverId: selectedContact.id,\n                message: newMessage,\n            });\n            const newMessageObj = {\n                id: Date.now(), // Generate a unique temporary ID (replace with actual ID from server if available)\n                senderId: userId,\n                receiverId: selectedContact.id,\n                message: newMessage,\n            };\n            setMessages([...messages, newMessageObj]);\n            setNewMessage('');\n            // Ensure the contact is added to existing chats when a message is sent\n            setExistingChats(prev => new Set(prev).add(selectedContact.id));\n        } catch (error) {\n            console.error('Error sending message:', error);\n        }\n    };\n\n    const filteredContacts = contacts.filter(\n        contact =>\n        (existingChats.has(contact.id) &&\n            (contact.firstName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                contact.lastName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                contact.email.toLowerCase().includes(searchTerm.toLowerCase())))\n    );\n\n    return (\n        <div className=\"messages-container\">\n            <div className=\"chat-list\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Search contacts...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                />\n                {filteredContacts.map((contact) => (\n                    <div\n                        key={contact.id}\n                        className={`chat-item ${selectedContact && selectedContact.id === contact.id ? 'selected' : ''}`}\n                        onClick={() => setSelectedContact(contact)}\n                    >\n                        {contact.firstName} {contact.lastName}\n                    </div>\n                ))}\n            </div>\n            <div className=\"chat-messages\">\n                {selectedContact ? (\n                    <>\n                        <div className=\"messages\">\n                            {messages.map((msg) => (\n                                <div key={msg.id} className={`message ${msg.senderId === userId ? 'sent' : 'received'}`}>\n                                    {msg.message}\n                                </div>\n                            ))}\n                        </div>\n                        <div className=\"message-input\">\n                            <input\n                                type=\"text\"\n                                value={newMessage}\n                                onChange={(e) => setNewMessage(e.target.value)}\n                                placeholder=\"Type your message...\"\n                            />\n                            <button onClick={handleSendMessage}>Send</button>\n                        </div>\n                    </>\n                ) : (\n                    <div className=\"no-chat-selected\">Select a contact to start messaging</div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Messages;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}