{"ast":null,"code":"var _jsxFileName = \"/Users/nikitamarwah/Orbital24/artistically/client/src/components/Messages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Messages.css'; // Import CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messages = ({\n  userId,\n  contactId\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3001/messages/${userId}/${contactId}`);\n        setMessages(response.data);\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n        // Handle error (e.g., show error message to user)\n      }\n    };\n    fetchMessages();\n  }, [userId, contactId]);\n  const sendMessage = async () => {\n    try {\n      // Send message to backend\n      await axios.post('http://localhost:3001/messages/send', {\n        senderId: userId,\n        receiverId: contactId,\n        message: newMessage\n      });\n\n      // Update messages state with new message\n      const newMessageObj = {\n        id: Date.now(),\n        // Generate a unique temporary ID (replace with actual ID from server)\n        senderId: userId,\n        receiverId: contactId,\n        message: newMessage\n      };\n      setMessages([...messages, newMessageObj]); // Add new message to existing messages array\n      setNewMessage(''); // Clear input field after sending\n    } catch (error) {\n      console.error('Error sending message:', error);\n      // Handle error (e.g., show error message to user)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages-container\",\n    style: {\n      overflow: \"hidden\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-list\",\n      style: {\n        overflow: \"hidden\"\n      },\n      children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.senderId === userId ? 'sent' : 'received'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.senderId === userId ? 'You' : 'Contact', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), \" \", msg.message]\n      }, msg.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input\",\n      style: {\n        overflow: \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(Messages, \"ppYy//Iy9fHF0/R/fKleZlFUFyc=\");\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Messages","userId","contactId","_s","messages","setMessages","newMessage","setNewMessage","fetchMessages","response","get","data","error","console","sendMessage","post","senderId","receiverId","message","newMessageObj","id","Date","now","className","style","overflow","children","map","msg","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/nikitamarwah/Orbital24/artistically/client/src/components/Messages.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Messages.css'; // Import CSS file for styling\n\nconst Messages = ({ userId, contactId }) => {\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState('');\n\n    useEffect(() => {\n        const fetchMessages = async () => {\n            try {\n                const response = await axios.get(`http://localhost:3001/messages/${userId}/${contactId}`);\n                setMessages(response.data);\n            } catch (error) {\n                console.error('Error fetching messages:', error);\n                // Handle error (e.g., show error message to user)\n            }\n        };\n        fetchMessages();\n    }, [userId, contactId]);\n\n    const sendMessage = async () => {\n        try {\n            // Send message to backend\n            await axios.post('http://localhost:3001/messages/send', {\n                senderId: userId,\n                receiverId: contactId,\n                message: newMessage\n            });\n\n            // Update messages state with new message\n            const newMessageObj = {\n                id: Date.now(), // Generate a unique temporary ID (replace with actual ID from server)\n                senderId: userId,\n                receiverId: contactId,\n                message: newMessage\n            };\n\n            setMessages([...messages, newMessageObj]); // Add new message to existing messages array\n            setNewMessage(''); // Clear input field after sending\n        } catch (error) {\n            console.error('Error sending message:', error);\n            // Handle error (e.g., show error message to user)\n        }\n    };\n\n    return (\n        <div className=\"messages-container\" style={{ overflow: \"hidden\" }}>\n            <div className=\"messages-list\" style={{ overflow: \"hidden\" }}>\n                {messages.map(msg => (\n                    <div key={msg.id} className={`message ${msg.senderId === userId ? 'sent' : 'received'}`}>\n                        <strong>{msg.senderId === userId ? 'You' : 'Contact'}:</strong> {msg.message}\n                    </div>\n                ))}\n            </div>\n            <div className=\"message-input\" style={{ overflow: \"hidden\" }}>\n                <input\n                    type=\"text\"\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    placeholder=\"Type a message\"\n                />\n                <button onClick={sendMessage}>Send</button>\n            </div>\n        </div>\n    );\n};\n\nexport default Messages;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}