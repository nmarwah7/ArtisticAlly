{"ast":null,"code":"var _jsxFileName = \"/Users/nikitamarwah/Orbital24/artistically/src/components/ImageGrid.js\";\nimport React from 'react';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ImageGrid() {\n  const itemData = Array.from(Array(9).keys()).map(index => ({\n    img: `/p${index + 1}.png`,\n    // Assuming images are named p1.png to p9.png in the public folder\n    title: `Image ${index + 1}`\n  }));\n  const itemWidth = 300; // Adjust width of each ImageListItem\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '60%',\n      padding: '0px',\n      overflow: 'hidden',\n      marginTop: '5cm',\n      marginLeft: '0'\n    },\n    children: [\" \", /*#__PURE__*/_jsxDEV(ImageList, {\n      sx: {\n        width: '100%',\n        height: '100%',\n        overflowY: 'auto'\n      },\n      cols: 3,\n      rowHeight: 300,\n      children: itemData.map(item => /*#__PURE__*/_jsxDEV(ImageListItem, {\n        sx: {\n          width: itemWidth,\n          margin: '0'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.img,\n          alt: item.title,\n          loading: \"lazy\",\n          style: {\n            width: '100%',\n            height: '100%',\n            objectFit: 'cover'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this)\n      }, item.img, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_c = ImageGrid;\nvar _c;\n$RefreshReg$(_c, \"ImageGrid\");","map":{"version":3,"names":["React","ImageList","ImageListItem","jsxDEV","_jsxDEV","ImageGrid","itemData","Array","from","keys","map","index","img","title","itemWidth","style","width","padding","overflow","marginTop","marginLeft","children","sx","height","overflowY","cols","rowHeight","item","margin","src","alt","loading","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nikitamarwah/Orbital24/artistically/src/components/ImageGrid.js"],"sourcesContent":["import React from 'react';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\n\nexport default function ImageGrid() {\n    const itemData = Array.from(Array(9).keys()).map((index) => ({\n        img: `/p${index + 1}.png`, // Assuming images are named p1.png to p9.png in the public folder\n        title: `Image ${index + 1}`,\n    }));\n\n    const itemWidth = 300; // Adjust width of each ImageListItem\n\n    return (\n        <div style={{ width: '60%', padding: '0px', overflow: 'hidden', marginTop: '5cm', marginLeft: '0' }}> {/* Added marginLeft */}\n            <ImageList sx={{ width: '100%', height: '100%', overflowY: 'auto' }} cols={3} rowHeight={300}>\n                {itemData.map((item) => (\n                    <ImageListItem key={item.img} sx={{ width: itemWidth, margin: '0' }}>\n                        <img\n                            src={item.img}\n                            alt={item.title}\n                            loading=\"lazy\"\n                            style={{ width: '100%', height: '100%', objectFit: 'cover' }}\n                        />\n                    </ImageListItem>\n                ))}\n            </ImageList>\n        </div>\n    );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,aAAa,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,eAAe,SAASC,SAASA,CAAA,EAAG;EAChC,MAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAEC,KAAK,KAAM;IACzDC,GAAG,EAAE,KAAKD,KAAK,GAAG,CAAC,MAAM;IAAE;IAC3BE,KAAK,EAAE,SAASF,KAAK,GAAG,CAAC;EAC7B,CAAC,CAAC,CAAC;EAEH,MAAMG,SAAS,GAAG,GAAG,CAAC,CAAC;;EAEvB,oBACIV,OAAA;IAAKW,KAAK,EAAE;MAAEC,KAAK,EAAE,KAAK;MAAEC,OAAO,EAAE,KAAK;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,SAAS,EAAE,KAAK;MAAEC,UAAU,EAAE;IAAI,CAAE;IAAAC,QAAA,GAAC,GAAC,eAClGjB,OAAA,CAACH,SAAS;MAACqB,EAAE,EAAE;QAAEN,KAAK,EAAE,MAAM;QAAEO,MAAM,EAAE,MAAM;QAAEC,SAAS,EAAE;MAAO,CAAE;MAACC,IAAI,EAAE,CAAE;MAACC,SAAS,EAAE,GAAI;MAAAL,QAAA,EACxFf,QAAQ,CAACI,GAAG,CAAEiB,IAAI,iBACfvB,OAAA,CAACF,aAAa;QAAgBoB,EAAE,EAAE;UAAEN,KAAK,EAAEF,SAAS;UAAEc,MAAM,EAAE;QAAI,CAAE;QAAAP,QAAA,eAChEjB,OAAA;UACIyB,GAAG,EAAEF,IAAI,CAACf,GAAI;UACdkB,GAAG,EAAEH,IAAI,CAACd,KAAM;UAChBkB,OAAO,EAAC,MAAM;UACdhB,KAAK,EAAE;YAAEC,KAAK,EAAE,MAAM;YAAEO,MAAM,EAAE,MAAM;YAAES,SAAS,EAAE;UAAQ;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE;MAAC,GANcT,IAAI,CAACf,GAAG;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOb,CAClB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEd;AAACC,EAAA,GAxBuBhC,SAAS;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}